{'extraCredit': 0,
 'fatalError': False,
 'maxExtraCredit': 0,
 'maxTotalPoints': 20,
 'messages': [],
 'mode': 'auto',
 'parts': [{'description': 'Basic test for succAndProbReward() that covers '
                           'several edge cases.',
            'extraCredit': False,
            'maxPoints': 3,
            'maxSeconds': 5,
            'messages': [],
            'name': '2a-1-basic',
            'points': 3,
            'seconds': 0},
           {'description': 'Hidden test for ValueIteration. Run ValueIteration '
                           'on BlackjackMDP, then test if V[startState] is '
                           'correct.',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 5,
            'messages': ['Expected to be true, but got false'],
            'name': '2a-2-hidden',
            'points': 0,
            'seconds': 2},
           {'description': 'Basic test for incorporateFeedback() using '
                           'NumberLineMDP.',
            'extraCredit': False,
            'maxPoints': 3,
            'maxSeconds': 3,
            'messages': [],
            'name': '3a-1-basic',
            'points': 3,
            'seconds': 0},
           {'description': 'Hidden test for incorporateFeedback(). Run '
                           'Qlearning on a small MDP, then ensure that getQ '
                           'returns reasonable policy.',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 3,
            'messages': ['Expected to be true, but got false'],
            'name': '3a-2-hidden',
            'points': 0,
            'seconds': 1},
           {'description': 'Basic test for incorporateFeedback() using '
                           'NumberLineMDP.',
            'extraCredit': False,
            'maxPoints': 3,
            'maxSeconds': 3,
            'messages': [],
            'name': '3b-1-basic',
            'points': 3,
            'seconds': 0},
           {'description': 'Hidden test for incorporateFeedback(). Run SARSA '
                           'on a small MDP, then ensure that getQ returns '
                           'reasonable policy.',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 3,
            'messages': ['Expected to be true, but got false'],
            'name': '3b-2-hidden',
            'points': 0,
            'seconds': 2},
           {'description': 'Basic test for blackjackFeatureExtractor.  Runs '
                           'Qlearning using blackjackFeatureExtractor, then '
                           'checks to see that Q-values are correct.',
            'extraCredit': False,
            'maxPoints': 3,
            'maxSeconds': 3,
            'messages': ["Exception thrown: <class 'NotImplementedError'> -- ",
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\grader.py", '
                         'line 203, in test_3c_1\n'
                         '    rl.incorporateFeedback([(7, None, (0, 1)), '
                         "'Quit', 7, (7, None, None)], mdp.isEnd)\n",
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\submission.py", '
                         'line 171, in incorporateFeedback\n'
                         '    newAction = self.getAction(newState)\n'
                         '                ^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\submission.py", '
                         'line 152, in getAction\n'
                         '    return max((self.getQ(state, action), action) '
                         'for action in self.actions(state))[1]\n'
                         '           '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\submission.py", '
                         'line 152, in <genexpr>\n'
                         '    return max((self.getQ(state, action), action) '
                         'for action in self.actions(state))[1]\n'
                         '                ^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\submission.py", '
                         'line 140, in getQ\n'
                         '    for f, v in self.featureExtractor(state, '
                         'action):\n'
                         '                '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\submission.py", '
                         'line 231, in blackjackFeatureExtractor\n'
                         '    raise NotImplementedError  # remove this line '
                         'before writing code\n'
                         '    ^^^^^^^^^^^^^^^^^^^^^^^^^\n'],
            'name': '3c-1-basic',
            'points': 0,
            'seconds': 0},
           {'description': 'Hidden test for incorporateFeedback(). Run '
                           'Qlearning on a large MDP, then ensure that getQ '
                           'returns reasonable policy.',
            'extraCredit': False,
            'maxPoints': 2,
            'maxSeconds': 20,
            'messages': ["Exception thrown: <class 'NotImplementedError'> -- ",
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\grader.py", '
                         'line 224, in test_3c_2\n'
                         '    util.simulate(mdp, rl, numTrials=30000)\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\util.py", '
                         'line 174, in simulate\n'
                         '    action = rl.getAction(state)\n'
                         '             ^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\solution.py", '
                         'line 128, in getAction\n'
                         '    return max((self.getQ(state, action), action) '
                         'for action in self.actions(state))[1]\n'
                         '           '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\solution.py", '
                         'line 128, in <genexpr>\n'
                         '    return max((self.getQ(state, action), action) '
                         'for action in self.actions(state))[1]\n'
                         '                ^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\solution.py", '
                         'line 116, in getQ\n'
                         '    for f, v in self.featureExtractor(state, '
                         'action):\n'
                         '                '
                         '^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n',
                         '  File '
                         '"c:\\Users\\Administrator\\Documents\\Wang\\aiAssi4\\submission.py", '
                         'line 231, in blackjackFeatureExtractor\n'
                         '    raise NotImplementedError  # remove this line '
                         'before writing code\n'
                         '    ^^^^^^^^^^^^^^^^^^^^^^^^^\n'],
            'name': '3c-2-hidden',
            'points': 0,
            'seconds': 0}],
 'totalPoints': 9}
